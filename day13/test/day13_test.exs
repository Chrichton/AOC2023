defmodule Day13Test do
  use ExUnit.Case

  def grid1() do
    [
      ["#", ".", "#", "#", ".", ".", "#", "#", "."],
      [".", ".", "#", ".", "#", "#", ".", "#", "."],
      ["#", "#", ".", ".", ".", ".", ".", ".", "#"],
      ["#", "#", ".", ".", ".", ".", ".", ".", "#"],
      [".", ".", "#", ".", "#", "#", ".", "#", "."],
      [".", ".", "#", "#", ".", ".", "#", "#", "."],
      ["#", ".", "#", ".", "#", "#", ".", "#", "."]
    ]
  end

  def grid2() do
    [
      ["#", ".", ".", ".", "#", "#", ".", ".", "#"],
      ["#", ".", ".", ".", ".", "#", ".", ".", "#"],
      [".", ".", "#", "#", ".", ".", "#", "#", "#"],
      ["#", "#", "#", "#", "#", ".", "#", "#", "."],
      ["#", "#", "#", "#", "#", ".", "#", "#", "."],
      [".", ".", "#", "#", ".", ".", "#", "#", "#"],
      ["#", ".", ".", ".", ".", "#", ".", ".", "#"]
    ]
  end

  test "read_input" do
    assert Day13.read_input("sample") ==
             [
               grid1(),
               grid2()
             ]
  end

  test "sample" do
    assert Day13.solve("sample") == 405
  end

  test "star" do
    assert Day13.solve("star") == 35360
  end

  test "lines_with_fixed_smudge1" do
    assert Day13.lines_with_fixed_smudge(grid1(), [5]) == [3]
  end

  test "line_with_fixed_smudge2" do
    assert Day13.lines_with_fixed_smudge(grid2(), [4]) == [1]
  end

  test "lines_with_fixed_smudge1 transposed" do
    assert Day13.lines_with_fixed_smudge(grid1() |> Day13.transpose(), [5]) == []
  end

  test "lines_with_fixed_smudge2 transposed" do
    assert Day13.lines_with_fixed_smudge(grid2() |> Day13.transpose(), [4]) == []
  end

  test "lines_with_fixed_smudge3" do
    grid = [
      ["#", "#", "#", "#", ".", ".", ".", ".", "#", ".", ".", ".", "#"],
      ["#", "#", "#", ".", ".", ".", ".", ".", "#", ".", ".", ".", "#"],
      [".", "#", "#", "#", ".", "#", ".", "#", "#", "#", ".", "#", "#"],
      ["#", "#", ".", "#", ".", ".", ".", "#", "#", ".", "#", ".", "#"],
      ["#", ".", "#", "#", ".", "#", ".", "#", ".", "#", "#", "#", "."],
      ["#", ".", "#", ".", "#", ".", ".", "#", "#", ".", ".", "#", "."],
      ["#", "#", ".", ".", "#", "#", ".", ".", "#", ".", ".", ".", "#"],
      ["#", "#", "#", ".", ".", ".", "#", "#", "#", ".", "#", ".", "."],
      ["#", "#", "#", ".", ".", ".", "#", "#", "#", ".", "#", ".", "."]
      # ["#", "#", ".", ".", "#", "#", ".", ".", "#", ".", ".", ".", "#"]
      # ["#", ".", "#", ".", "#", ".", ".", "#", "#", ".", ".", "#", "."]
    ]

    assert Day13.lines_with_fixed_smudge(grid, [8]) == [1]
  end

  test "lines_with_fixed_smudge3 transposed" do
    grid = [
      ["#", "#", "#", ".", ".", ".", ".", ".", ".", "#", "#", "#", "#"],
      [".", ".", "#", "#", ".", ".", ".", ".", "#", "#", ".", ".", "."],
      [".", "#", ".", "#", "#", "#", "#", "#", "#", ".", "#", ".", "."],
      ["#", ".", "#", "#", "#", ".", ".", "#", "#", "#", ".", "#", "#"],
      ["#", ".", "#", "#", ".", ".", ".", ".", ".", "#", ".", "#", "#"],
      [".", "#", ".", "#", "#", ".", ".", "#", "#", ".", "#", ".", "."],
      [".", "#", "#", ".", ".", ".", ".", ".", ".", "#", "#", ".", "."]
    ]

    assert Day13.lines_with_fixed_smudge(Day13.transpose(grid), [12]) == [1]
  end

  test "sample2" do
    assert Day13.solve2("sample") == 400
  end

  # 28173, 34107 too low
  test "star2" do
    # assert
    Day13.solve2("star") |> IO.inspect(limit: :infinity)
    # == 36755
  end
end

# is
# [6, 6, 8, 7, 1, 100, 6, 4, 4, 100, 5, 2, 0, 9, 1100, 9, 1000, 1200, 8, 7, 1000,
#  200, 14, 14, 100, 1600, 8, 1100, 900, 200, 1, 300, 4, 600, 200, 9, 900, 1400,
#  100, 1300, 16, 10, 1200, 11, 800, 4, 11, 400, 1100, 900, 1400, 200, 100, 1000,
#  1200, 800, 400, 4, 400, 1300, 7, 5, 6, 300, 6, 3, 2, 8, 500, 2, 400, 500, 14,
#  10, 600, 6, 1, 5, 1300, 200, 7, 11, 10, 900, 2, 12, 1100, 8, 5, 1000, 600,
#  1000, 1, 5, 200, 1600, 16, 3, 1600, 8]

# should be
# [6, 6, 8, 7, 1, 100, 6, 4, 4, 100, 5, 2, 4, 9, 1100, 9, 1000, 1200, 8, 7, 1000,
# 200,
# 14, 14, 100, 1600, 8, 1100, 900, 200, 1, 300, 4, 600, 200, 9, 900, 1400,
#  100, 1300,
# 16, 10, 1200, 11, 800, 4, 11, 400, 1100, 900, 1400, 200, 100, 1000,
#  1200, 800, 400,
# 4, 400, 1300, 7, 5, 6, 300, 6, 3, 2, 8, 500, 2, 400, 500, 14,
#  10, 600, 6, 1, 5,
# 1300, 200, 7, 11, 10, 900, 2, 12, 1100, 8, 5, 1000, 600,
#  1000, 1, 5, 200, 1600, 16, 3, 1600, 8]

# correct
# rows
# [
#   "####....#...#",
#   "###.....#...#",
#   ".###.#.###.##",
#   "##.#...##.#.#",
#   "#.##.#.#.###.",
#   "#.#.#..##..#.",
#   "##..##..#...#",
#   "###...###.#..",
#   "###...###.#..",
#   "##..##..#...#",
#   "#.#.#..##..#."
# ]

# cols
# [
#   "##.########",
#   "####..####.",
#   "###.##.##.#",
#   "#.###......",
#   ".....##..##",
#   "..#.#.#..#.",
#   ".......##..",
#   "..####.##.#",
#   "####.######",
#   "..#.#......",
#   "...##..##..",
#   "..#.##....#",
#   "####..#..#."
# ]
